{"version":3,"sources":["Components/IncomeExpense.module.css","Components/History/HistoryList.module.css","Components/NewTransaction/AddNewTransaction.module.css","Components/TotalBalance.module.css","Components/History/History.module.css","Components/NewTransaction/AddTransactionButton.module.css","App.module.css","App-Constants.tsx","Components/IncomeExpense.tsx","Components/TotalBalance.tsx","Components/History/HistoryList.tsx","Components/History/History.tsx","Components/NewTransaction/AddTransactionButton.tsx","Components/NewTransaction/AddNewTransaction.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Currency","CurrencyFormatter","Intl","NumberFormat","IncomeExpense","props","className","styles","whiteBox","incomeBox","priceBox","greenBox","format","add","toFixed","redBox","exp","TotalBalance","totalAmtObj","console","log","balance","balanceAmount","totalAmount","addAmt","expAmt","HistoryList","trxHitoryObj","deleteEntryHandler","useContext","setTotalAmtContext","length","Container","map","obj","historyList","isAddition","green","red","delete","onClick","id","deleteEntry","text","amount","React","memo","History","container","line","AddTransactionButton","type","addDataHandlers","tabIndex","btn","AddNewTransaction","setTotalAmtObj","useState","setText","setAmount","error","setError","inputFields","htmlFor","value","onChange","ev","target","slice","isNaN","amt","description","setTotalAmtHandler","createContext","App","TotalAmtObj","setTotalAmt","TrxHitoryObj","setTrxHitoryObj","Provider","prev","Date","now","stamp","filtered","filter","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.761bdf2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteBox\":\"IncomeExpense_whiteBox__22WCh\",\"incomeBox\":\"IncomeExpense_incomeBox__2WcXB\",\"priceBox\":\"IncomeExpense_priceBox__11PLe\",\"greenBox\":\"IncomeExpense_greenBox__25UjW\",\"redBox\":\"IncomeExpense_redBox__3dEKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"historyList\":\"HistoryList_historyList__2aU6x\",\"delete\":\"HistoryList_delete__EmCFj\",\"green\":\"HistoryList_green__3M6gP\",\"red\":\"HistoryList_red__2UI9S\",\"Container\":\"HistoryList_Container__YvrsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddNewTransaction_container__3A02g\",\"line\":\"AddNewTransaction_line__3TPaI\",\"inputFields\":\"AddNewTransaction_inputFields__2c2HB\",\"error\":\"AddNewTransaction_error__9ZcOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"TotalBalance_balance__1hgsy\",\"balanceAmount\":\"TotalBalance_balanceAmount__2hz21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"History_container__-GGFG\",\"line\":\"History_line__HhzzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"AddTransactionButton_btn__2tW6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__jARGD\"};","export const Currency = \"â‚¹\";\r\nexport const CurrencyFormatter = new Intl.NumberFormat(\"en-IN\");\r\n","import { useState, useEffect } from \"react\";\r\nimport { Currency, CurrencyFormatter } from \"../App-Constants\";\r\nimport styles from \"./IncomeExpense.module.css\";\r\n\r\nconst IncomeExpense = (props) => {\r\n  return (\r\n    <>\r\n      <div className={styles.whiteBox}>\r\n        <p className={styles.incomeBox}>\r\n          income{\" \"}\r\n          <span className={`${styles.priceBox} ${styles.greenBox}`}>\r\n            {Currency}\r\n            <span>{CurrencyFormatter.format(props.add.toFixed(2))}</span>\r\n          </span>\r\n        </p>\r\n        <hr />\r\n        <p className={styles.incomeBox}>\r\n          expense{\" \"}\r\n          <span className={`${styles.priceBox} ${styles.redBox}`}>\r\n            {Currency}\r\n            <span>{CurrencyFormatter.format(props.exp.toFixed(2))}</span>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default IncomeExpense;\r\n","import { useState } from \"react\";\r\nimport IncomeExpense from \"./IncomeExpense\";\r\nimport { Currency, CurrencyFormatter } from \"../App-Constants\";\r\nimport styles from \"./TotalBalance.module.css\";\r\nconst TotalBalance = (props) => {\r\n  let { totalAmtObj } = props;\r\n  console.log(props);\r\n  return (\r\n    <>\r\n      <div className={styles.balance}>\r\n        <p>your balance</p>\r\n        <p className={styles.balanceAmount}>\r\n          {Currency}\r\n          <span>\r\n            {CurrencyFormatter.format(totalAmtObj.totalAmount.toFixed(2))}\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <IncomeExpense add={totalAmtObj.addAmt} exp={totalAmtObj.expAmt} />\r\n    </>\r\n  );\r\n};\r\nexport default TotalBalance;\r\n","import React, { useContext } from \"react\";\r\nimport { Currency, CurrencyFormatter } from \"../../App-Constants\";\r\nimport styles from \"./HistoryList.module.css\";\r\nimport { setTotalAmtContext } from \"../../App\";\r\n\r\nconst HistoryList = (props) => {\r\n  let { trxHitoryObj } = props;\r\n  const deleteEntryHandler = useContext(setTotalAmtContext);\r\n\r\n  const deleteFun = (id) => {\r\n    deleteEntryHandler.deleteEntry(id);\r\n    console.log(\"hi\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`${trxHitoryObj.length > 0 ? styles.Container : \"\"}`}>\r\n        {trxHitoryObj.length > 0\r\n          ? trxHitoryObj.map((obj) => {\r\n              return (\r\n                <p\r\n                  key={obj.id}\r\n                  className={`${styles.historyList} ${\r\n                    obj.isAddition === true ? styles.green : styles.red\r\n                  }`}\r\n                >\r\n                  <span>\r\n                    <span\r\n                      className={styles.delete}\r\n                      onClick={() => {\r\n                        deleteFun(obj.id);\r\n                      }}\r\n                    >\r\n                      &#10539;\r\n                    </span>\r\n                    {obj.text}\r\n                  </span>\r\n                  <span>\r\n                    {Currency}\r\n                    {CurrencyFormatter.format(obj.amount)}\r\n                  </span>\r\n                </p>\r\n              );\r\n            })\r\n          : \"No transaction data available\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default React.memo(HistoryList);\r\n","import React from \"react\";\r\nimport HistoryList from \"./HistoryList\";\r\nimport styles from \"./History.module.css\";\r\nconst History = (props) => {\r\n  let { trxHitoryObj } = props;\r\n  console.log(trxHitoryObj);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <p>History</p>\r\n        <p className={styles.line} />\r\n      </div>\r\n      <HistoryList trxHitoryObj={trxHitoryObj} />\r\n    </>\r\n  );\r\n};\r\nexport default React.memo(History);\r\n","import styles from \"./AddTransactionButton.module.css\";\r\n\r\nconst AddTransactionButton = (props) => {\r\n  const addTransactionFun = () => {\r\n    props.addDataHandlers();\r\n  };\r\n  return (\r\n    <button\r\n      type=\"submit\"\r\n      onClick={addTransactionFun}\r\n      tabIndex={0}\r\n      className={styles.btn}\r\n    >\r\n      Add transaction\r\n    </button>\r\n  );\r\n};\r\nexport default AddTransactionButton;\r\n","import AddTransactionButton from \"./AddTransactionButton\";\r\nimport { useContext, useState } from \"react\";\r\nimport { setTotalAmtContext } from \"../../App\";\r\nimport { Currency } from \"../../App-Constants\";\r\nimport styles from \"./AddNewTransaction.module.css\";\r\n\r\nconst AddNewTransaction = () => {\r\n  const setTotalAmtObj = useContext(setTotalAmtContext);\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"+\");\r\n  const [error, setError] = useState(\"\");\r\n  const textInputHandler = (ev) => {\r\n    setText(ev.target.value);\r\n  };\r\n\r\n  const amountInputHandler = (ev) => {\r\n    setAmount(ev.target.value);\r\n  };\r\n  const addDataHandler = () => {\r\n    if (amount[0] !== \"+\" && amount[0] !== \"-\") {\r\n      setError(\"Please prefix amount with '+' or '-'\");\r\n      return;\r\n    }\r\n    amount.slice(1);\r\n    if (!isNaN(+amount) && +amount !== 0) {\r\n      setError(\"\");\r\n      let amt = +amount;\r\n      let description = (text.length > 0 && text) || \"New Transaction\";\r\n      setTotalAmtObj.setTotalAmtHandler(amt, description);\r\n      setText(\"\");\r\n    } else {\r\n      setError(\"Enter a valid amount\");\r\n    }\r\n    setAmount(amount[0]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <p>add new transaction</p>\r\n        <p className={styles.line}></p>\r\n        <div className={styles.inputFields}>\r\n          <label htmlFor=\"text\">text</label>\r\n          <input\r\n            id=\"text\"\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={textInputHandler}\r\n          />\r\n        </div>\r\n        <div className={styles.inputFields}>\r\n          <label htmlFor=\"amount\">\r\n            amount (<span>{Currency}</span>)\r\n          </label>\r\n          <input\r\n            id=\"amount\"\r\n            type=\"text\"\r\n            value={amount}\r\n            onChange={amountInputHandler}\r\n          />\r\n        </div>\r\n        {error.length > 0 && (\r\n          <p className={styles.error} tabIndex={0}>\r\n            {error}\r\n          </p>\r\n        )}\r\n      </div>\r\n      <AddTransactionButton addDataHandlers={addDataHandler} />\r\n    </>\r\n  );\r\n};\r\nexport default AddNewTransaction;\r\n","import React, { useState } from \"react\";\r\nimport TotalBalance from \"./Components/TotalBalance\";\r\nimport History from \"./Components/History/History\";\r\nimport AddNewTransaction from \"./Components/NewTransaction/AddNewTransaction\";\r\nimport styles from \"./App.module.css\";\r\n\r\nexport const setTotalAmtContext = React.createContext();\r\n\r\nconst App = () => {\r\n  const [TotalAmtObj, setTotalAmt] = useState({\r\n    totalAmount: 0,\r\n    addAmt: 0,\r\n    expAmt: 0,\r\n  });\r\n  const [TrxHitoryObj, setTrxHitoryObj] = useState([]);\r\n\r\n  const UpdateAmount = (amt, text) => {\r\n    if (amt > 0) {\r\n      setTotalAmt((prev) => {\r\n        return {\r\n          ...prev,\r\n          totalAmount: prev.totalAmount + amt,\r\n          addAmt: prev.addAmt + amt,\r\n        };\r\n      });\r\n      setTrxHitoryObj((prev) => {\r\n        return [\r\n          { amount: amt, text: text, isAddition: true, id: Date.now() },\r\n          ...prev,\r\n        ];\r\n      });\r\n    } else if (amt < 0) {\r\n      setTotalAmt((prev) => {\r\n        return {\r\n          ...prev,\r\n          totalAmount: prev.totalAmount + amt,\r\n          expAmt: prev.expAmt + amt,\r\n        };\r\n      });\r\n      setTrxHitoryObj((prev) => {\r\n        return [\r\n          { amount: amt, text: text, isAddition: false, id: Date.now() },\r\n          ...prev,\r\n        ];\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteEntry = (stamp: number) => {\r\n    setTrxHitoryObj((prev) => {\r\n      let filtered = prev.filter((item) => item.id !== stamp);\r\n      console.log(filtered);\r\n      return filtered;\r\n    });\r\n  };\r\n  return (\r\n    <setTotalAmtContext.Provider\r\n      value={{ setTotalAmtHandler: UpdateAmount, deleteEntry }}\r\n    >\r\n      <div className={styles.container}>\r\n        <h4>Expense Tracker</h4>\r\n        <TotalBalance totalAmtObj={TotalAmtObj} />\r\n        <History trxHitoryObj={TrxHitoryObj} />\r\n        <AddNewTransaction />\r\n      </div>\r\n    </setTotalAmtContext.Provider>\r\n  );\r\n};\r\nexport default React.memo(App);\r\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}